{"ast":null,"code":"import { jokeAPI } from '../api/api';\nexport const appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    joke: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'SET_STATE') {\n    return { ...state,\n      ...action.initialState\n    };\n  }\n\n  if (action.type === 'SET_CATEGORIES') {\n    return { ...state,\n      jokeCategories: action.categories\n    };\n  }\n\n  if (action.type === 'SET_JOKE') {\n    return { ...state,\n      joke: action.joke\n    };\n  }\n\n  return state;\n};\n\nconst setStateAC = initialState => ({\n  type: 'SET_STATE',\n  initialState\n});\n\nconst setCategoriesAC = categories => ({\n  type: 'SET_CATEGORIES',\n  categories\n});\n\nconst setJokeAC = joke => ({\n  type: 'SET_JOKE',\n  joke\n});\n\nexport const setInitialState = () => {\n  return async dispatch => {\n    let data = await jokeAPI.getInitialData();\n    dispatch(setStateAC(data));\n  };\n};\nexport const setCategories = () => {\n  return async dispatch => {\n    let data = await jokeAPI.getCategories();\n    dispatch(setCategoriesAC(data));\n  };\n};\nexport const setJoke = category => {\n  return async dispatch => {\n    let data = await jokeAPI.getJoke(category);\n    dispatch(setJokeAC(data));\n  };\n};","map":{"version":3,"sources":["C:/Users/varva/pro/codeEmpire/test/src/redux/appReducer.js"],"names":["jokeAPI","appReducer","state","joke","action","type","initialState","jokeCategories","categories","setStateAC","setCategoriesAC","setJokeAC","setInitialState","dispatch","data","getInitialData","setCategories","getCategories","setJoke","category","getJoke"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAA8B;AAAA,MAA7BC,KAA6B,uEAAvB;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAuB;AAAA,MAAXC,MAAW;;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO,EACH,GAAGH,KADA;AAEH,SAAGE,MAAM,CAACE;AAFP,KAAP;AAIH;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AAClC,WAAO,EACH,GAAGH,KADA;AAEHK,MAAAA,cAAc,EAAEH,MAAM,CAACI;AAFpB,KAAP;AAIH;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC3B,WAAO,EACH,GAAGH,KADA;AAEHC,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFV,KAAP;AAIJ;;AACD,SAAOD,KAAP;AACH,CApBM;;AAsBP,MAAMO,UAAU,GAAIH,YAAD,KAAmB;AAACD,EAAAA,IAAI,EAAE,WAAP;AAAoBC,EAAAA;AAApB,CAAnB,CAAnB;;AACA,MAAMI,eAAe,GAAIF,UAAD,KAAiB;AAACH,EAAAA,IAAI,EAAE,gBAAP;AAAyBG,EAAAA;AAAzB,CAAjB,CAAxB;;AACA,MAAMG,SAAS,GAAIR,IAAD,KAAW;AAACE,EAAAA,IAAI,EAAE,UAAP;AAAmBF,EAAAA;AAAnB,CAAX,CAAlB;;AAEA,OAAO,MAAMS,eAAe,GAAG,MAAM;AACjC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAIC,IAAI,GAAG,MAAMd,OAAO,CAACe,cAAR,EAAjB;AACAF,IAAAA,QAAQ,CAACJ,UAAU,CAACK,IAAD,CAAX,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAME,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMH,QAAN,IAAkB;AACrB,QAAIC,IAAI,GAAG,MAAMd,OAAO,CAACiB,aAAR,EAAjB;AACAJ,IAAAA,QAAQ,CAACH,eAAe,CAACI,IAAD,CAAhB,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMI,OAAO,GAAIC,QAAD,IAAc;AACjC,SAAO,MAAMN,QAAN,IAAkB;AACrB,QAAIC,IAAI,GAAG,MAAMd,OAAO,CAACoB,OAAR,CAAgBD,QAAhB,CAAjB;AACAN,IAAAA,QAAQ,CAACF,SAAS,CAACG,IAAD,CAAV,CAAR;AACH,GAHD;AAIH,CALM","sourcesContent":["import { jokeAPI } from '../api/api';\r\n\r\nexport const appReducer = (state={joke: {}}, action) => {\r\n    if (action.type === 'SET_STATE') {\r\n        return {\r\n            ...state,\r\n            ...action.initialState\r\n        }\r\n    }\r\n    if (action.type === 'SET_CATEGORIES') {\r\n        return {\r\n            ...state,\r\n            jokeCategories: action.categories\r\n        }\r\n    }\r\n    if (action.type === 'SET_JOKE') {\r\n         return {\r\n             ...state,\r\n             joke: action.joke\r\n         }\r\n    }\r\n    return state\r\n}\r\n\r\nconst setStateAC = (initialState) => ({type: 'SET_STATE', initialState})\r\nconst setCategoriesAC = (categories) => ({type: 'SET_CATEGORIES', categories})\r\nconst setJokeAC = (joke) => ({type: 'SET_JOKE', joke})\r\n\r\nexport const setInitialState = () => {\r\n    return async dispatch => {\r\n        let data = await jokeAPI.getInitialData()\r\n        dispatch(setStateAC(data))\r\n    }\r\n}\r\n\r\nexport const setCategories = () => {\r\n    return async dispatch => {\r\n        let data = await jokeAPI.getCategories()\r\n        dispatch(setCategoriesAC(data))\r\n    }\r\n}\r\n\r\nexport const setJoke = (category) => {\r\n    return async dispatch => {\r\n        let data = await jokeAPI.getJoke(category)\r\n        dispatch(setJokeAC(data))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}